generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  cellPhone String?  @map("cell_phone")
  taxId     String?  @map("tax_id")
  createdAt DateTime @default(now()) @map("created_at")
  googleId  String?  @map("google_id")

  RefreshToken RefreshToken[]
  Subscription Subscription[]
  Company      Company[]
  Schedule     Schedule[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  expiresAt DateTime @map("expires_at")
  issuedAt  DateTime @map("issued_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Subscription {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  status      String
  amount      Float
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  nextBilling DateTime @map("next_billing")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Company {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  name      String
  address   String
  cellPhone String   @map("cell_phone")
  photo     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Product  Product[]
  Service  Service[]
  Schedule Schedule[]

  @@map("companies")
}

model Product {
  id          String   @id @default(uuid()) @db.Uuid
  companyId   String   @map("company_id") @db.Uuid
  name        String
  price       Float
  description String
  photo       String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  company         Company           @relation(fields: [companyId], references: [id], onDelete: Cascade)
  ScheduleProduct ScheduleProduct[]

  @@map("products")
}

model Service {
  id           String   @id @default(uuid()) @db.Uuid
  companyId    String   @map("company_id") @db.Uuid
  name         String
  description  String
  expectedTime String   @map("expected_time")
  photo        String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  company         Company           @relation(fields: [companyId], references: [id], onDelete: Cascade)
  ScheduleService ScheduleService[]

  @@map("services")
}

model Schedule {
  id            String   @id @default(uuid()) @db.Uuid
  companyId     String   @map("company_id") @db.Uuid
  userId        String   @map("user_id") @db.Uuid
  date          DateTime
  customerName  String   @map("customer_name")
  customerEmail String   @map("customer_email")
  customerPhone String   @map("customer_phone")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  ScheduleProduct ScheduleProduct[]
  ScheduleService ScheduleService[]

  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("schedules")
}

model ScheduleProduct {
  id         String @id @default(uuid()) @db.Uuid
  scheduleId String @map("schedule_id") @db.Uuid
  productId  String @map("product_id") @db.Uuid
  quantity   Int    @default(1)

  schedule Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("schedule_products")
}

model ScheduleService {
  id         String @id @default(uuid()) @db.Uuid
  scheduleId String @map("schedule_id") @db.Uuid
  serviceId  String @map("service_id") @db.Uuid

  schedule Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  service  Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@map("schedule_services")
}
